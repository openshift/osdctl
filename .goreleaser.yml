project_name: osdctl
builds:
  - env:
      - CGO_ENABLED=0
      - "GO111MODULE=on" # make sure to use go modules
      - "GOFLAGS=-mod=readonly -trimpath" # trimpath helps with producing verifiable binaries
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      # the following line will inject the current git tag in the binary during the build process.
      # .Version are template variables that will be set during the GoReleaser run
      # The "-X" go flag injects the strings into the two global variables GitCommit and Version
      # See also: https://pkg.go.dev/cmd/link
      - -s
      - -w
      - -X github.com/openshift/osdctl/pkg/utils.Version={{.Version}}
      - "-extldflags=-zrelro" # binary hardening: For further explanation look here: https://www.redhat.com/en/blog/hardening-elf-binaries-using-relocation-read-only-relro
      - "-extldflags=-znow"

archives:
  # https://goreleaser.com/deprecations/#archivesreplacements
  - name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else }}{{ .Arch }}{{ end}}

checksum:
  name_template: 'sha256sum.txt'
  algorithm: sha256

snapshot:
  name_template: "{{ .Tag }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^test:'

release:
  github:
    owner: "openshift"
    name: "osdctl"
  prerelease: auto
